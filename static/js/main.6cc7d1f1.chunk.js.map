{"version":3,"sources":["Components/Card.js","serviceWorker.js","Components/SearchBox.js","Components/CardList.js","robots.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["Card","name","email","id","className","alt","src","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","SearchBox","searchfield","searchChange","type","placeholder","onChange","CardList","robots","cardComponent","map","user","i","key","username","Scroll","props","style","overflow","border","height","children","ErrorBoundry","hasError","info","this","setState","color","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","fontSize","fontFamily","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6cc7d1f1.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst Card = ({ name, email, id }) =>{\n    return(\n        <div className = 'bg-light-yellow dib pa1 ma2 br3 grow shadow-2 '>\n          <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}  />\n          <div>\n          <hr />\n            <h2 className='tc'>{name}</h2>\n            <hr />\n            <p className='tc' >{email}</p>\n          </div>  \n            \n        </div>\n    )\n}\nexport default Card;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) => {\n    return(\n        <input className='ma2' type='search' placeholder='Search Robos' onChange={searchChange} />\n    )\n}\nexport default SearchBox;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n  \n  const cardComponent = robots.map((user,i) => {\n    return <Card key={i}\n                 id={robots[i].id}\n                 name={robots[i].name}\n                 email={robots[i].email} />\n  })\n  \n  return (\n    <div>\n      {cardComponent}\n    </div>\n  )\n }\n export default CardList;","export const robots = [\n    {\n      id: 1,\n      name: 'Leanne Graham',\n      username: 'Bret',\n      email: 'Sincere@april.biz'\n    },\n    {\n      id: 2,\n      name: 'Ervin Howell',\n      username: 'Antonette',\n      email: 'Shanna@melissa.tv'\n    },\n    {\n      id: 3,\n      name: 'Clementine Bauch',\n      username: 'Samantha',\n      email: 'Nathan@yesenia.net'\n    },\n    {\n      id: 4,\n      name: 'Patricia Lebsack',\n      username: 'Karianne',\n      email: 'Julianne.OConner@kory.org'\n    },\n    {\n      id: 5,\n      name: 'Chelsey Dietrich',\n      username: 'Kamren',\n      email: 'Lucio_Hettinger@annie.ca'\n    },\n    {\n      id: 6,\n      name: 'Mrs. Dennis Schulist',\n      username: 'Leopoldo_Corkery',\n      email: 'Karley_Dach@jasper.info'\n    },\n    {\n      id: 7,\n      name: 'Kurtis Weissnat',\n      username: 'Elwyn.Skiles',\n      email: 'Telly.Hoeger@billy.biz'\n    },\n    {\n      id: 8,\n      name: 'Nicholas Runolfsdottir V',\n      username: 'Maxime_Nienow',\n      email: 'Sherwood@rosamond.me'\n    },\n    {\n      id: 9,\n      name: 'Glenna Reichert',\n      username: 'Delphine',\n      email: 'Chaim_McDermott@dana.io'\n    },\n    {\n      id: 10,\n      name: 'Clementina DuBuque',\n      username: 'Moriah.Stanton',\n      email: 'Rey.Padberg@karina.biz'\n    }\n  ];","import React from 'react';\n\n\nconst Scroll = (props) => {\nreturn (\n<div style={{ overflow:'scroll',border:'5px solid black',height:'800px' }}>\n   { props.children }\n</div>\n\n)};\n\nexport default Scroll;","import React, { Component } from 'react';\n\n\nclass ErrorBoundry extends Component{\n    constructor(){\n        super();\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError : true})\n    }\n\n    render(){\n        \n            if(this.state.hasError){\n                return <p style={{ color: 'white' }} >Building up things for you . . .</p>\n            }\n            else{\n                return this.props.children;\n            }\n\n\n        \n    }\n\n\n}  \n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport SearchBox from '../Components/SearchBox';\nimport CardList from '../Components/CardList';\nimport { robots } from '../robots';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry from '../Components/ErrorBoundry';\nclass App extends Component {\n  constructor(){\n  super()\n  this.state = {\n    robots : [],\n    searchfield: ''\n  }\n}\n\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response=> {return response.json()})\n  .then(users=>this.setState({robots: users}))\n}\n\n\nonSearchChange = (event) => {\nthis.setState ({ searchfield : event.target.value });\n}\n\n\n\n render() {\n   const filteredRobots = this.state.robots.filter(robots => {\n     return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\n   })\n   if(!robots){\n     return <h4>Loading...</h4>\n   }\n    else {\n        return(\n        <div className='tc'>\n          <h1 className = 'tc pa2' style= {{ fontSize: '50px', color: \"white\", fontFamily:'Orbitron' }}><code><strong>RoboFriends!</strong></code></h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n          <ErrorBoundry>\n           \n             <CardList robots = { filteredRobots } />\n           \n           \n          </ErrorBoundry>\n          </Scroll>\n        </div>\n      \n        )}\n  }\n\n }\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Card from './Components/Card'\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './Containers/App';\n\n\nReactDOM.render(\n  <div> \n    <App />\n  </div>,\n  document.getElementById('root')\n  );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}